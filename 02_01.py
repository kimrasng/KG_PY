print("100")

"100"

print(100)

100

print("%d" % 100)

print("%d" % 10)    # 10진수 10

print("%x" % 10)    # 16진수 10

# 16진수 (0~9, a, b, c, d, e, f)

print("%x" % 15)    # 16진수 15

print("%c" % 10)    # 8진수 10

# print("%b" % 10)    # 2진수 10

# %b는 지원 안함

print("%d" % 123)

print("%5d" % 123)  # 5칸에 123을 우로 정렬해서 출력한다.

print("%05d" % 123) # 5칸에 123을 우로 정렬해서 출력하고 빈공간에 0으로 채워라

print("%f" % 123.45)    # 실수 출력 (실수는 소수점 포함해서 7자리 이하로 출력)

print("%7.1f" % 123.45) #  실수 출력 (전부 7자리로 하고 소숫점 이하 1자리 수로출력)

print("%7.3f" % 123.45) #  실수 출력 (전부 7자리로 하고 소숫점 이하 3자리 수로 출력)

print("%s" % "python")

print("%10s" % "python")    # 문자열 출력 (10칸에 우로 정렬해서 출력)

#format() 함수와 {}를 함께 사용해서 서식 작성

print("%d %5d %05d" % (123, 123, 123))

print("{0:d} {1:5d} {2:05d}" .format(123, 123, 123))

print("{0:d} {1:d} {2:d}" .format(100, 200, 300))

print("{2:d} {1:d} {0:d}" .format(100, 200, 300))

# format() ==> 출력서식(4호)
# 이스케이프(탈출) 문자 (\n, \t, \b, \\, \', \")
# d2coding 폰트 ==> 0, O, ㅇ, I, i, L, l, 1, \, 

print("한 행입니다. 또 한행입니다.")

print("한 행입니다.\n또한행입니다.")

print("\t탭키\t연습")

print("글자가 \"강조\" 되는 효과")

print("역슬러시 세개 출력\\\\\\")

print(r"\n\t\\탈출문자 그대로 출력")

